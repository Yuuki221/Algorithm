============ Tree Traversal Summary ==============

There are 4 mainly types: preorder traversal, In-order traversal, Post-order traversal and Level-order traversal 

1. preorder traversal: 
order: parent --> left --> right
both time complexity is O(N), where N is the number of TreeNodes in the tree. 
----- Recursive Version -------
inorder(TreeNode node){
	visit(node);
	inorder(node.left);
	inorder(node.right);
}

---- Depth First Search Iterative Version ---
iterativePreorder(node){
	if(node==null) return;
	s <-- empty stack
	s.push(node)
	while(not s.isEmpty()){
		node <-- s.pop()
		visit(node) 
		if(node.right != null) s.push(node.right);
		if(node.left != null) s.push(node.left);
	}
}

3. postorder traversal 
order: left --> right --> parent 
both time complexity is O(N) as well 

----- Recusive Version ------
postorder(TreeNode node){
	if (node==null) return;
	postorder(node.left);
	postorder(node.right);
	visit(node);
}

----- Depth First Search ------- 
postorder(TreeNode node){
	s <-- empty stack;
	declare result;
	while(s is not empty){
		cur = s.pop();
		result.add(cur);
		if(cur.left!=null) s.push(cur.left);
		if(cur.right!=null) s.push(cur.right);
	}
	return result;
}



